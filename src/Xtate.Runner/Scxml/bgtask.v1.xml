<?xml version="1.0" encoding="utf-8"?>

<!--
  Data Model: XPATH
  
  Generate events to run task:              &bgtask.prefix;.state.#
  Consumed events to queue background task: &bgtask.prefix;.signal.#
  Consumed events when task finished:       done.state.&bgtask.prefix;.state.#
  
-->
<state id="&bgtask.prefix;" xmlns="http://www.w3.org/2005/07/scxml">
  <transition event="&bgtask.prefix;.signal.&bgtask.name1;" target="&bgtask.prefix;.queue.&bgtask.name1;"
              type="internal" />
  <transition event="&bgtask.prefix;.signal.&bgtask.name2;" target="&bgtask.prefix;.queue.&bgtask.name2;"
              type="internal" />
  <transition event="&bgtask.prefix;.signal.&bgtask.name3;" target="&bgtask.prefix;.queue.&bgtask.name3;"
              type="internal" />
  <transition event="&bgtask.prefix;.signal.&bgtask.name4;" target="&bgtask.prefix;.queue.&bgtask.name4;"
              type="internal" />

  <state id="&bgtask.prefix;.idle" />

  <parallel id="&bgtask.prefix;.execution">
    <state>
      <final id="&bgtask.prefix;.final.&bgtask.name1;" />
      <state id="&bgtask.prefix;.queue.&bgtask.name1;">
        <transition cond="In(&bgtask.prefix;.task.&bgtask.name1;)" target="&bgtask.prefix;.final.&bgtask.name1;" />
      </state>
    </state>

    <state>
      <final id="&bgtask.prefix;.final.&bgtask.name2;" />
      <state id="&bgtask.prefix;.queue.&bgtask.name2;">
        <transition cond="In(&bgtask.prefix;.task.&bgtask.name2;)" target="&bgtask.prefix;.final.&bgtask.name2;" />
      </state>
    </state>

    <state>
      <final id="&bgtask.prefix;.final.&bgtask.name3;" />
      <state id="&bgtask.prefix;.queue.&bgtask.name3;">
        <transition cond="In(&bgtask.prefix;.task.&bgtask.name3;)" target="&bgtask.prefix;.final.&bgtask.name3;" />
      </state>
    </state>

    <state>
      <final id="&bgtask.prefix;.final.&bgtask.name4;" />
      <state id="&bgtask.prefix;.queue.&bgtask.name4;">
        <transition cond="In(&bgtask.prefix;.task.&bgtask.name4;)" target="&bgtask.prefix;.final.&bgtask.name4;" />
      </state>
    </state>

    <state id="&bgtask.prefix;.pipelines" initial="&bgtask.prefix;.switch">
      <state id="&bgtask.prefix;.switch">
        <transition cond="In(&bgtask.prefix;.queue.&bgtask.name1;)" target="&bgtask.prefix;.task.&bgtask.name1;" />
        <transition cond="In(&bgtask.prefix;.queue.&bgtask.name2;)" target="&bgtask.prefix;.task.&bgtask.name2;" />
        <transition cond="In(&bgtask.prefix;.queue.&bgtask.name3;)" target="&bgtask.prefix;.task.&bgtask.name3;" />
        <transition cond="In(&bgtask.prefix;.queue.&bgtask.name4;)" target="&bgtask.prefix;.task.&bgtask.name4;" />
        <transition target="&bgtask.prefix;.pipelines.final" />
      </state>

      <state id="&bgtask.prefix;.task.&bgtask.name1;">
        <onentry>
          <raise event="&bgtask.prefix;.state.&bgtask.name1;" />
        </onentry>
      </state>

      <state id="&bgtask.prefix;.task.&bgtask.name2;">
        <onentry>
          <raise event="&bgtask.prefix;.state.&bgtask.name2;" />
        </onentry>
      </state>

      <state id="&bgtask.prefix;.task.&bgtask.name3;">
        <onentry>
          <raise event="&bgtask.prefix;.state.&bgtask.name3;" />
        </onentry>
      </state>

      <state id="&bgtask.prefix;.task.&bgtask.name4;">
        <onentry>
          <raise event="&bgtask.prefix;.state.&bgtask.name4;" />
        </onentry>
      </state>

      <transition event="done.state.&bgtask.prefix;.state.*" target="&bgtask.prefix;.switch" type="internal" />
      <final id="&bgtask.prefix;.pipelines.final" />
    </state>

    <transition event="done.state.&bgtask.prefix;.execution" target="&bgtask.prefix;.idle" />
  </parallel>
</state>