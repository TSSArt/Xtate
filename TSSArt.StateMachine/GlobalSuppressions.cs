// @formatter:off

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.SimpleServiceBase")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineController")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineHostContext")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineHostPersistedContext")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachinePersistedContext")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachinePersistedController")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.FinalFluentBuilder`1")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IFinalBuilder")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IParallelBuilder")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IStateBuilder")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ParallelFluentBuilder`1")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateFluentBuilder`1")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1030:Use events where appropriate", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.TransitionFluentBuilder`1")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.CustomActionDispatcher.SetupExecutor")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NamedIoProcessor.StartListener~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NamedIoProcessorFactory.GetHostName~System.String")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ResxResourceLoader.RequestXmlReader(System.Uri,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask{System.Xml.XmlReader}")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.SimpleServiceBase.DisposeAsync~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.SimpleServiceBase.Start(System.Uri,TSSArt.StateMachine.InvokeData,TSSArt.StateMachine.IServiceCommunication)")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineController.DelayedFire(TSSArt.StateMachine.StateMachineController.ScheduledEvent,System.Int32)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHost.CompleteAsync(TSSArt.StateMachine.StateMachineHostContext,TSSArt.StateMachine.IService,TSSArt.StateMachine.StateMachineController,TSSArt.StateMachine.SessionId,TSSArt.StateMachine.InvokeId)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHost.TSSArt#StateMachine#IStateMachineHost#StartInvoke(System.String,TSSArt.StateMachine.InvokeData,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHostContext.WaitAllAsync(System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineInterpreter.Error(System.Object,System.Exception,System.Boolean)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StreamStorage.DisposeAsync~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.WebResourceLoader.RequestXmlReader(System.Uri,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask{System.Xml.XmlReader}")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.XmlDirector`1.Populate``1(``0,TSSArt.StateMachine.XmlDirector`1.Policy{``0})~``0")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.XmlDirector`1.PopulateAttributes``1(``0,TSSArt.StateMachine.XmlDirector`1.Policy{``0},TSSArt.StateMachine.XmlDirector`1.Policy{``0}.ValidationContext)")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.XmlDirector`1.PopulateElements``1(``0,TSSArt.StateMachine.XmlDirector`1.Policy{``0},TSSArt.StateMachine.XmlDirector`1.Policy{``0}.ValidationContext)")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1032:Implement standard exception constructors", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineValidationException")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataModelHandlerBase")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultAssignEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultCancelEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultContentBodyEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultCustomActionEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultForEachEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultIfEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultInvokeEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultLogEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultRaiseEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultScriptEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DefaultSendEvaluator")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IoProcessorBase")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.SimpleServiceBase")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.LazyId.TSSArt#StateMachine#IObject#ToObject~System.Object")][assembly: SuppressMessage(category:"Globalization", checkId:"CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.IdGenerator.NewGuidWithHash(System.Int32)~System.String")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1034:Nested types should not be visible", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.XmlDirector`1.Policy`1.ValidationContext")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IElse")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IEntity")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IExecutableEntity")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IIdentifier")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IStateEntity")]
[assembly: SuppressMessage(category:"Design", checkId:"CA1040:Avoid empty interfaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IValueEvaluator")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.IdGenerator.NewInvokeId(System.String,System.Int32)~System.String")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.DataModelValue.TryFromAnonymousType(System.Object,System.Collections.Generic.Dictionary{System.Object,System.Object}@,TSSArt.StateMachine.DataModelValue@)~System.Boolean")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.FullUriComparer.GetHashCode(System.Uri)~System.Int32")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.Identifier.GetHashCode~System.Int32")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.LazyId.GetHashCode~System.Int32")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NamedIoProcessor.ExtractSessionId(System.Uri)~TSSArt.StateMachine.SessionId")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ScxmlDirector.AsEventDescriptorList(System.String)~System.Collections.Immutable.ImmutableArray{TSSArt.StateMachine.IEventDescriptor}")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ScxmlDirector.AsIdentifierList(System.String)~System.Collections.Immutable.ImmutableArray{TSSArt.StateMachine.IIdentifier}")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ScxmlDirector.AsLocationExpressionList(System.String)~System.Collections.Immutable.ImmutableArray{TSSArt.StateMachine.ILocationExpression}")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.SessionId.#ctor(System.String)")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.SessionId.GetHashCode~System.Int32")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHostContext.GetService(TSSArt.StateMachine.SessionId,System.Uri)~TSSArt.StateMachine.IService")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1307:Specify StringComparison", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.InvokeId.InvokeUniqueIdEqualityComparer.GetHashCode(TSSArt.StateMachine.InvokeId)~System.Int32")]
[assembly: SuppressMessage(category:"Globalization", checkId:"CA1308:Normalize strings to uppercase", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ScxmlDirector.AsEnum``1(System.String)~``0")]
[assembly: SuppressMessage(category:"Microsoft.Naming", checkId:"CA1724:TypeNamesShouldNotMatchNamespaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.Data")]
[assembly: SuppressMessage(category:"Microsoft.Naming", checkId:"CA1724:TypeNamesShouldNotMatchNamespaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachine")]
[assembly: SuppressMessage(category:"Microsoft.Naming", checkId:"CA1724:TypeNamesShouldNotMatchNamespaces", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.XmlDirector`1.Policy`1")]
[assembly: SuppressMessage(category:"Naming", checkId:"CA1710:Identifiers should have correct suffix", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataModelArray")]
[assembly: SuppressMessage(category:"Naming", checkId:"CA1720:Identifier contains type name", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataModelValueType")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.AssignEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.CancelEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ConditionExpression")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ConfiguredStreamAwaitable")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ContentBody")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ContentEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.CustomAction")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataModelDescriptor")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DataModelEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.DoneDataEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ElseEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ElseIfEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.EventEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ExternalDataExpression")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ExternalScriptExpression")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.FinalEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.FinalizeEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ForEachEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.HistoryEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.IfEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.InitialEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.InterpreterOptions")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.InvokeData")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.InvokeEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.LocationExpression")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.LogEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.OnEntryEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.OnExitEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ParallelEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ParamEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.RaiseEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ScriptEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ScriptExpression")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.SendEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineOptions")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineOrigin")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.StateMachineVisitor.TrackList`1")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.TransitionEntity")]
[assembly: SuppressMessage(category:"Performance", checkId:"CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:TSSArt.StateMachine.ValueExpression")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NamedIoProcessor.StartListener~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NamedIoProcessorFactory.Create(TSSArt.StateMachine.IEventConsumer,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask{TSSArt.StateMachine.IIoProcessor}")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ResxResourceLoader.RequestXmlReader(System.Uri,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask{System.Xml.XmlReader}")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHost.Dispatch(TSSArt.StateMachine.SessionId,TSSArt.StateMachine.IEvent,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHost.TSSArt#StateMachine#IStateMachineHost#IsInvokeActive(TSSArt.StateMachine.SessionId,TSSArt.StateMachine.InvokeId)~System.Boolean")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.StateMachineHost.TSSArt#StateMachine#IStateMachineHost#StartInvoke(TSSArt.StateMachine.SessionId,TSSArt.StateMachine.InvokeData,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask")]
[assembly: SuppressMessage(category:"Reliability", checkId:"CA2000:Dispose objects before losing scope", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.WebResourceLoader.RequestXmlReader(System.Uri,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Threading.CancellationToken)~System.Threading.Tasks.ValueTask{System.Xml.XmlReader}")]
[assembly: SuppressMessage(category:"Style",  checkId:"IDE0057:Use range operator", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.EventName.SetParts(System.Span{TSSArt.StateMachine.IIdentifier},System.String)")]
[assembly: SuppressMessage(category:"Style", checkId:"IDE0057:Use range operator", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.Bucket.StringKeyConverter`1.Write(System.String,System.Span{System.Byte})")]
[assembly: SuppressMessage(category:"Style", checkId:"IDE0057:Use range operator", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.NoneDataModelHandler.Build(TSSArt.StateMachine.IConditionExpression@,TSSArt.StateMachine.ConditionExpression@)")]
[assembly: SuppressMessage(category:"Style", checkId:"IDE0057:Use range operator", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.ScxmlDirector.AsMilliseconds~System.Int32")]
[assembly: SuppressMessage(category:"Style", checkId:"IDE0066:Convert switch statement to expression", Justification = "<Pending>", Scope = "member", Target = "~M:TSSArt.StateMachine.Encode.Decode(System.ReadOnlySpan{System.Byte})~System.Int32")]
